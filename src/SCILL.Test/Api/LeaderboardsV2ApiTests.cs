/* 
 * SCILL API
 *
 * SCILL gives you the tools to activate, retain and grow your user base in your app or game by bringing you features well known in the gaming industry: Gamification. We take care of the services and technology involved so you can focus on your game and content.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@scillgame.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using SCILL.Client;
using SCILL.Api;
using SCILL.Model;

namespace SCILL.Test
{
    /// <summary>
    ///  Class for testing LeaderboardsV2Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LeaderboardsV2ApiTests
    {
        private LeaderboardsV2Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LeaderboardsV2Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LeaderboardsV2Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LeaderboardsV2Api
            //Assert.IsInstanceOfType(typeof(LeaderboardsV2Api), instance, "instance is a LeaderboardsV2Api");
        }

        /// <summary>
        /// Test GetLeaderboardV2
        /// </summary>
        [Test]
        public void GetLeaderboardV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leaderboardId = null;
            //string startDate = null;
            //string endDate = null;
            //string aggregate = null;
            //int? currentPage = null;
            //int? currentPosition = null;
            //int? pageSize = null;
            //string language = null;
            //var response = instance.GetLeaderboardV2(leaderboardId, startDate, endDate, aggregate, currentPage, currentPosition, pageSize, language);
            //Assert.IsInstanceOf<LeaderboardV2Results> (response, "response is LeaderboardV2Results");
        }
        /// <summary>
        /// Test GetLeaderboardV2Ranking
        /// </summary>
        [Test]
        public void GetLeaderboardV2RankingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string memberType = null;
            //string memberId = null;
            //string leaderboardId = null;
            //string startDate = null;
            //string endDate = null;
            //string aggregate = null;
            //string language = null;
            //var response = instance.GetLeaderboardV2Ranking(memberType, memberId, leaderboardId, startDate, endDate, aggregate, language);
            //Assert.IsInstanceOf<LeaderboardV2MemberRanking> (response, "response is LeaderboardV2MemberRanking");
        }
        /// <summary>
        /// Test GetLeaderboardV2Rankings
        /// </summary>
        [Test]
        public void GetLeaderboardV2RankingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string memberType = null;
            //string memberId = null;
            //string startDate = null;
            //string endDate = null;
            //string aggregate = null;
            //string language = null;
            //var response = instance.GetLeaderboardV2Rankings(memberType, memberId, startDate, endDate, aggregate, language);
            //Assert.IsInstanceOf<List<LeaderboardV2MemberRanking>> (response, "response is List<LeaderboardV2MemberRanking>");
        }
        /// <summary>
        /// Test GetLeaderboardsV2
        /// </summary>
        [Test]
        public void GetLeaderboardsV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string startDate = null;
            //string endDate = null;
            //string aggregate = null;
            //int? currentPage = null;
            //int? currentPosition = null;
            //int? pageSize = null;
            //string language = null;
            //var response = instance.GetLeaderboardsV2(startDate, endDate, aggregate, currentPage, currentPosition, pageSize, language);
            //Assert.IsInstanceOf<List<LeaderboardV2Results>> (response, "response is List<LeaderboardV2Results>");
        }
        /// <summary>
        /// Test ResetLeaderboardV2Rankings
        /// </summary>
        [Test]
        public void ResetLeaderboardV2RankingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //string leaderboardId = null;
            //var response = instance.ResetLeaderboardV2Rankings(appId, leaderboardId);
            //Assert.IsInstanceOf<ActionResponse> (response, "response is ActionResponse");
        }
    }

}
